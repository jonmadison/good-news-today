{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/twilio/src/SMSForm.js\";\nimport React from \"react\";\nimport \"./styles/SMSForm.css\";\nconst allTimeZones = [{\n  offset: \"GMT-12:00\",\n  name: \"Etc/GMT-12\"\n}, {\n  offset: \"GMT-11:00\",\n  name: \"Etc/GMT-11\"\n}, {\n  offset: \"GMT-11:00\",\n  name: \"Pacific/Midway\"\n}, {\n  offset: \"GMT-10:00\",\n  name: \"America/Adak\"\n}, {\n  offset: \"GMT-09:00\",\n  name: \"America/Anchorage\"\n}, {\n  offset: \"GMT-09:00\",\n  name: \"Pacific/Gambier\"\n}, {\n  offset: \"GMT-08:00\",\n  name: \"America/Dawson_Creek\"\n}, {\n  offset: \"GMT-08:00\",\n  name: \"America/Ensenada\"\n}, {\n  offset: \"GMT-08:00\",\n  name: \"America/Los_Angeles\"\n}, {\n  offset: \"GMT-07:00\",\n  name: \"America/Chihuahua\"\n}, {\n  offset: \"GMT-07:00\",\n  name: \"America/Denver\"\n}, {\n  offset: \"GMT-06:00\",\n  name: \"America/Belize\"\n}, {\n  offset: \"GMT-06:00\",\n  name: \"America/Cancun\"\n}, {\n  offset: \"GMT-06:00\",\n  name: \"America/Chicago\"\n}, {\n  offset: \"GMT-06:00\",\n  name: \"Chile/EasterIsland\"\n}, {\n  offset: \"GMT-05:00\",\n  name: \"America/Bogota\"\n}, {\n  offset: \"GMT-05:00\",\n  name: \"America/Havana\"\n}, {\n  offset: \"GMT-05:00\",\n  name: \"America/New_York\"\n}, {\n  offset: \"GMT-04:30\",\n  name: \"America/Caracas\"\n}, {\n  offset: \"GMT-04:00\",\n  name: \"America/Campo_Grande\"\n}, {\n  offset: \"GMT-04:00\",\n  name: \"America/Glace_Bay\"\n}, {\n  offset: \"GMT-04:00\",\n  name: \"America/Goose_Bay\"\n}, {\n  offset: \"GMT-04:00\",\n  name: \"America/Santiago\"\n}, {\n  offset: \"GMT-04:00\",\n  name: \"America/La_Paz\"\n}, {\n  offset: \"GMT-03:00\",\n  name: \"America/Argentina/Buenos_Aires\"\n}, {\n  offset: \"GMT-03:00\",\n  name: \"America/Montevideo\"\n}, {\n  offset: \"GMT-03:00\",\n  name: \"America/Araguaina\"\n}, {\n  offset: \"GMT-03:00\",\n  name: \"America/Godthab\"\n}, {\n  offset: \"GMT-03:00\",\n  name: \"America/Miquelon\"\n}, {\n  offset: \"GMT-03:00\",\n  name: \"America/Sao_Paulo\"\n}, {\n  offset: \"GMT-03:30\",\n  name: \"America/St_Johns\"\n}, {\n  offset: \"GMT-02:00\",\n  name: \"America/Noronha\"\n}, {\n  offset: \"GMT-01:00\",\n  name: \"Atlantic/Cape_Verde\"\n}, {\n  offset: \"GMT\",\n  name: \"Europe/Belfast\"\n}, {\n  offset: \"GMT\",\n  name: \"Africa/Abidjan\"\n}, {\n  offset: \"GMT\",\n  name: \"Europe/Dublin\"\n}, {\n  offset: \"GMT\",\n  name: \"Europe/Lisbon\"\n}, {\n  offset: \"GMT\",\n  name: \"Europe/London\"\n}, {\n  offset: \"UTC\",\n  name: \"UTC\"\n}, {\n  offset: \"GMT+01:00\",\n  name: \"Africa/Algiers\"\n}, {\n  offset: \"GMT+01:00\",\n  name: \"Africa/Windhoek\"\n}, {\n  offset: \"GMT+01:00\",\n  name: \"Atlantic/Azores\"\n}, {\n  offset: \"GMT+01:00\",\n  name: \"Atlantic/Stanley\"\n}, {\n  offset: \"GMT+01:00\",\n  name: \"Europe/Amsterdam\"\n}, {\n  offset: \"GMT+01:00\",\n  name: \"Europe/Belgrade\"\n}, {\n  offset: \"GMT+01:00\",\n  name: \"Europe/Brussels\"\n}, {\n  offset: \"GMT+02:00\",\n  name: \"Africa/Cairo\"\n}, {\n  offset: \"GMT+02:00\",\n  name: \"Africa/Blantyre\"\n}, {\n  offset: \"GMT+02:00\",\n  name: \"Asia/Beirut\"\n}, {\n  offset: \"GMT+02:00\",\n  name: \"Asia/Damascus\"\n}, {\n  offset: \"GMT+02:00\",\n  name: \"Asia/Gaza\"\n}, {\n  offset: \"GMT+02:00\",\n  name: \"Asia/Jerusalem\"\n}, {\n  offset: \"GMT+03:00\",\n  name: \"Africa/Addis_Ababa\"\n}, {\n  offset: \"GMT+03:00\",\n  name: \"Asia/Riyadh89\"\n}, {\n  offset: \"GMT+03:00\",\n  name: \"Europe/Minsk\"\n}, {\n  offset: \"GMT+03:30\",\n  name: \"Asia/Tehran\"\n}, {\n  offset: \"GMT+04:00\",\n  name: \"Asia/Dubai\"\n}, {\n  offset: \"GMT+04:00\",\n  name: \"Asia/Yerevan\"\n}, {\n  offset: \"GMT+04:00\",\n  name: \"Europe/Moscow\"\n}, {\n  offset: \"GMT+04:30\",\n  name: \"Asia/Kabul\"\n}, {\n  offset: \"GMT+05:00\",\n  name: \"Asia/Tashkent\"\n}, {\n  offset: \"GMT+05:30\",\n  name: \"Asia/Kolkata\"\n}, {\n  offset: \"GMT+05:45\",\n  name: \"Asia/Katmandu\"\n}, {\n  offset: \"GMT+06:00\",\n  name: \"Asia/Dhaka\"\n}, {\n  offset: \"GMT+06:00\",\n  name: \"Asia/Yekaterinburg\"\n}, {\n  offset: \"GMT+06:30\",\n  name: \"Asia/Rangoon\"\n}, {\n  offset: \"GMT+07:00\",\n  name: \"Asia/Bangkok\"\n}, {\n  offset: \"GMT+07:00\",\n  name: \"Asia/Novosibirsk\"\n}, {\n  offset: \"GMT+08:00\",\n  name: \"Etc/GMT+8\"\n}, {\n  offset: \"GMT+08:00\",\n  name: \"Asia/Hong_Kong\"\n}, {\n  offset: \"GMT+08:00\",\n  name: \"Asia/Krasnoyarsk\"\n}, {\n  offset: \"GMT+08:00\",\n  name: \"Australia/Perth\"\n}, {\n  offset: \"GMT+08:45\",\n  name: \"Australia/Eucla\"\n}, {\n  offset: \"GMT+09:00\",\n  name: \"Asia/Irkutsk\"\n}, {\n  offset: \"GMT+09:00\",\n  name: \"Asia/Seoul\"\n}, {\n  offset: \"GMT+09:00\",\n  name: \"Asia/Tokyo\"\n}, {\n  offset: \"GMT+09:30\",\n  name: \"Australia/Adelaide\"\n}, {\n  offset: \"GMT+09:30\",\n  name: \"Australia/Darwin\"\n}, {\n  offset: \"GMT+09:30\",\n  name: \"Pacific/Marquesas\"\n}, {\n  offset: \"GMT+10:00\",\n  name: \"Etc/GMT+10\"\n}, {\n  offset: \"GMT+10:00\",\n  name: \"Australia/Brisbane\"\n}, {\n  offset: \"GMT+10:00\",\n  name: \"Australia/Hobart\"\n}, {\n  offset: \"GMT+10:00\",\n  name: \"Asia/Yakutsk\"\n}, {\n  offset: \"GMT+10:30\",\n  name: \"Australia/Lord_Howe\"\n}, {\n  offset: \"GMT+11:00\",\n  name: \"Asia/Vladivostok\"\n}, {\n  offset: \"GMT+11:30\",\n  name: \"Pacific/Norfolk\"\n}, {\n  offset: \"GMT+12:00\",\n  name: \"Etc/GMT+12\"\n}, {\n  offset: \"GMT+12:00\",\n  name: \"Asia/Anadyr\"\n}, {\n  offset: \"GMT+12:00\",\n  name: \"Asia/Magadan\"\n}, {\n  offset: \"GMT+12:00\",\n  name: \"Pacific/Auckland\"\n}, {\n  offset: \"GMT+12:45\",\n  name: \"Pacific/Chatham\"\n}, {\n  offset: \"GMT+13:00\",\n  name: \"Pacific/Tongatapu\"\n}, {\n  offset: \"GMT+14:00\",\n  name: \"Pacific/Kiritimati\"\n}];\nconst countryList = [\"India\", \"Afghanistan\", \"Albania\", \"Algeria\", \"American Samoa\", \"Andorra\", \"Angola\", \"Anguilla\", \"Antigua and Barbuda\", \"Argentina\", \"Armenia\", \"Aruba\", \"Australia\", \"Austria\", \"Azerbaijan\", \"Bahamas (the)\", \"Bahrain\", \"Bangladesh\", \"Barbados\", \"Belarus\", \"Belgium\", \"Belize\", \"Benin\", \"Bermuda\", \"Bhutan\", \"Bolivia (Plurinational State of)\", \"Bonaire, Sint Eustatius and Saba\", \"Bosnia and Herzegovina\", \"Botswana\", \"Bouvet Island\", \"Brazil\", \"British Indian Ocean Territory (the)\", \"Brunei Darussalam\", \"Bulgaria\", \"Burkina Faso\", \"Burundi\", \"Cabo Verde\", \"Cambodia\", \"Cameroon\", \"Canada\", \"Cayman Islands (the)\", \"Central African Republic (the)\", \"Chad\", \"Chile\", \"China\", \"Christmas Island\", \"Cocos (Keeling) Islands (the)\", \"Colombia\", \"Comoros (the)\", \"Congo (the Democratic Republic of the)\", \"Congo (the)\", \"Cook Islands (the)\", \"Costa Rica\", \"Croatia\", \"Cuba\", \"Curaçao\", \"Cyprus\", \"Czechia\", \"Côte d'Ivoire\", \"Denmark\", \"Djibouti\", \"Dominica\", \"Dominican Republic (the)\", \"Ecuador\", \"Egypt\", \"El Salvador\", \"Equatorial Guinea\", \"Eritrea\", \"Estonia\", \"Eswatini\", \"Ethiopia\", \"Falkland Islands (the) [Malvinas]\", \"Faroe Islands (the)\", \"Fiji\", \"Finland\", \"France\", \"French Guiana\", \"French Polynesia\", \"French Southern Territories (the)\", \"Gabon\", \"Gambia (the)\", \"Georgia\", \"Germany\", \"Ghana\", \"Gibraltar\", \"Greece\", \"Greenland\", \"Grenada\", \"Guadeloupe\", \"Guam\", \"Guatemala\", \"Guernsey\", \"Guinea\", \"Guinea-Bissau\", \"Guyana\", \"Haiti\", \"Heard Island and McDonald Islands\", \"Holy See (the)\", \"Honduras\", \"Hong Kong\", \"Hungary\", \"Iceland\", \"Indonesia\", \"Iran (Islamic Republic of)\", \"Iraq\", \"Ireland\", \"Isle of Man\", \"Israel\", \"Italy\", \"Jamaica\", \"Japan\", \"Jersey\", \"Jordan\", \"Kazakhstan\", \"Kenya\", \"Kiribati\", \"Korea (the Democratic People's Republic of)\", \"Korea (the Republic of)\", \"Kuwait\", \"Kyrgyzstan\", \"Lao People's Democratic Republic (the)\", \"Latvia\", \"Lebanon\", \"Lesotho\", \"Liberia\", \"Libya\", \"Liechtenstein\", \"Lithuania\", \"Luxembourg\", \"Macao\", \"Madagascar\", \"Malawi\", \"Malaysia\", \"Maldives\", \"Mali\", \"Malta\", \"Marshall Islands (the)\", \"Martinique\", \"Mauritania\", \"Mauritius\", \"Mayotte\", \"Mexico\", \"Micronesia (Federated States of)\", \"Moldova (the Republic of)\", \"Monaco\", \"Mongolia\", \"Montenegro\", \"Montserrat\", \"Morocco\", \"Mozambique\", \"Myanmar\", \"Namibia\", \"Nauru\", \"Nepal\", \"Netherlands (the)\", \"New Caledonia\", \"New Zealand\", \"Nicaragua\", \"Niger (the)\", \"Nigeria\", \"Niue\", \"Norfolk Island\", \"Northern Mariana Islands (the)\", \"Norway\", \"Oman\", \"Pakistan\", \"Palau\", \"Palestine, State of\", \"Panama\", \"Papua New Guinea\", \"Paraguay\", \"Peru\", \"Philippines (the)\", \"Pitcairn\", \"Poland\", \"Portugal\", \"Puerto Rico\", \"Qatar\", \"Republic of North Macedonia\", \"Romania\", \"Russian Federation (the)\", \"Rwanda\", \"Réunion\", \"Saint Barthélemy\", \"Saint Helena, Ascension and Tristan da Cunha\", \"Saint Kitts and Nevis\", \"Saint Lucia\", \"Saint Martin (French part)\", \"Saint Pierre and Miquelon\", \"Saint Vincent and the Grenadines\", \"Samoa\", \"San Marino\", \"Sao Tome and Principe\", \"Saudi Arabia\", \"Senegal\", \"Serbia\", \"Seychelles\", \"Sierra Leone\", \"Singapore\", \"Sint Maarten (Dutch part)\", \"Slovakia\", \"Slovenia\", \"Solomon Islands\", \"Somalia\", \"South Africa\", \"South Georgia and the South Sandwich Islands\", \"South Sudan\", \"Spain\", \"Sri Lanka\", \"Sudan (the)\", \"Suriname\", \"Svalbard and Jan Mayen\", \"Sweden\", \"Switzerland\", \"Syrian Arab Republic\", \"Taiwan (Province of China)\", \"Tajikistan\", \"Tanzania, United Republic of\", \"Thailand\", \"Timor-Leste\", \"Togo\", \"Tokelau\", \"Tonga\", \"Trinidad and Tobago\", \"Tunisia\", \"Turkey\", \"Turkmenistan\", \"Turks and Caicos Islands (the)\", \"Tuvalu\", \"Uganda\", \"Ukraine\", \"United Arab Emirates (the)\", \"United Kingdom of Great Britain and Northern Ireland (the)\", \"United States Minor Outlying Islands (the)\", \"United States of America (the)\", \"Uruguay\", \"Uzbekistan\", \"Vanuatu\", \"Venezuela (Bolivarian Republic of)\", \"Viet Nam\", \"Virgin Islands (British)\", \"Virgin Islands (U.S.)\", \"Wallis and Futuna\", \"Western Sahara\", \"Yemen\", \"Zambia\", \"Zimbabwe\", \"Åland Islands\"];\n\nclass SMSForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: {\n        phoneNumber: \"\",\n        name: \"\",\n        location: \"\",\n        timeZone: \"\"\n      },\n      submitted: false,\n      error: false\n    };\n    this.onHandleChange = this.onHandleChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onHandleChange(event) {\n    const name = event.target.getAttribute(\"name\");\n    this.setState({\n      message: { ...this.state.message,\n        [name]: event.target.value\n      }\n    });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      submitting: true\n    });\n    console.log(this.state.message);\n    fetch(\"http://localhost:8082/api/users/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(this.state.message)\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        this.setState({\n          error: false,\n          submitting: false,\n          message: {\n            phoneNumber: \"\",\n            name: \"\",\n            location: \"\",\n            timeZone: \"\"\n          }\n        });\n      } else {\n        this.setState({\n          error: true,\n          submitting: false\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formElements\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: this.state.error ? \"error sms-form\" : \"sms-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 11\n      }\n    }, \"Name: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"name\",\n      name: \"name\",\n      id: \"name\",\n      onChange: this.onHandleChange,\n      value: this.state.message.name,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"phoneNumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 11\n      }\n    }, \"Number: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 11\n      }\n    }, \"please remember to append your country code e.g. +1\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"tel\",\n      name: \"phoneNumber\",\n      id: \"phoneNumber\",\n      onChange: this.onHandleChange,\n      value: this.state.message.phoneNumber,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 11\n      }\n    }, \"Country: \"), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"location\",\n      name: \"location\",\n      onChange: this.onHandleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      selected: true,\n      disabled: true,\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 13\n      }\n    }, \"Select your Country\"), countryList.map(country => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: country,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 22\n        }\n      }, country);\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"timeZone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 11\n      }\n    }, \"Timezone: \"), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"timeZone\",\n      name: \"timeZone\",\n      onChange: this.onHandleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      selected: true,\n      disabled: true,\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 13\n      }\n    }, \"Select your Timezone\"), allTimeZones.map(timezone => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: timezone.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 17\n        }\n      }, timezone.offset, \" - \", timezone.name);\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"submit-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 13\n      }\n    }, \"subscribe\"))));\n  }\n\n}\n\nexport default SMSForm;","map":{"version":3,"sources":["/Users/apple/Desktop/twilio/src/SMSForm.js"],"names":["React","allTimeZones","offset","name","countryList","SMSForm","Component","constructor","props","state","message","phoneNumber","location","timeZone","submitted","error","onHandleChange","bind","onSubmit","event","target","getAttribute","setState","value","preventDefault","submitting","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","data","success","render","map","country","timezone","textAlign"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./styles/SMSForm.css\";\n\nconst allTimeZones = [\n  {\n    offset: \"GMT-12:00\",\n    name: \"Etc/GMT-12\"\n  },\n  {\n    offset: \"GMT-11:00\",\n    name: \"Etc/GMT-11\"\n  },\n  {\n    offset: \"GMT-11:00\",\n    name: \"Pacific/Midway\"\n  },\n  {\n    offset: \"GMT-10:00\",\n    name: \"America/Adak\"\n  },\n  {\n    offset: \"GMT-09:00\",\n    name: \"America/Anchorage\"\n  },\n  {\n    offset: \"GMT-09:00\",\n    name: \"Pacific/Gambier\"\n  },\n  {\n    offset: \"GMT-08:00\",\n    name: \"America/Dawson_Creek\"\n  },\n  {\n    offset: \"GMT-08:00\",\n    name: \"America/Ensenada\"\n  },\n  {\n    offset: \"GMT-08:00\",\n    name: \"America/Los_Angeles\"\n  },\n  {\n    offset: \"GMT-07:00\",\n    name: \"America/Chihuahua\"\n  },\n  {\n    offset: \"GMT-07:00\",\n    name: \"America/Denver\"\n  },\n  {\n    offset: \"GMT-06:00\",\n    name: \"America/Belize\"\n  },\n  {\n    offset: \"GMT-06:00\",\n    name: \"America/Cancun\"\n  },\n  {\n    offset: \"GMT-06:00\",\n    name: \"America/Chicago\"\n  },\n  {\n    offset: \"GMT-06:00\",\n    name: \"Chile/EasterIsland\"\n  },\n  {\n    offset: \"GMT-05:00\",\n    name: \"America/Bogota\"\n  },\n  {\n    offset: \"GMT-05:00\",\n    name: \"America/Havana\"\n  },\n  {\n    offset: \"GMT-05:00\",\n    name: \"America/New_York\"\n  },\n  {\n    offset: \"GMT-04:30\",\n    name: \"America/Caracas\"\n  },\n  {\n    offset: \"GMT-04:00\",\n    name: \"America/Campo_Grande\"\n  },\n  {\n    offset: \"GMT-04:00\",\n    name: \"America/Glace_Bay\"\n  },\n  {\n    offset: \"GMT-04:00\",\n    name: \"America/Goose_Bay\"\n  },\n  {\n    offset: \"GMT-04:00\",\n    name: \"America/Santiago\"\n  },\n  {\n    offset: \"GMT-04:00\",\n    name: \"America/La_Paz\"\n  },\n  {\n    offset: \"GMT-03:00\",\n    name: \"America/Argentina/Buenos_Aires\"\n  },\n  {\n    offset: \"GMT-03:00\",\n    name: \"America/Montevideo\"\n  },\n  {\n    offset: \"GMT-03:00\",\n    name: \"America/Araguaina\"\n  },\n  {\n    offset: \"GMT-03:00\",\n    name: \"America/Godthab\"\n  },\n  {\n    offset: \"GMT-03:00\",\n    name: \"America/Miquelon\"\n  },\n  {\n    offset: \"GMT-03:00\",\n    name: \"America/Sao_Paulo\"\n  },\n  {\n    offset: \"GMT-03:30\",\n    name: \"America/St_Johns\"\n  },\n  {\n    offset: \"GMT-02:00\",\n    name: \"America/Noronha\"\n  },\n  {\n    offset: \"GMT-01:00\",\n    name: \"Atlantic/Cape_Verde\"\n  },\n  {\n    offset: \"GMT\",\n    name: \"Europe/Belfast\"\n  },\n  {\n    offset: \"GMT\",\n    name: \"Africa/Abidjan\"\n  },\n  {\n    offset: \"GMT\",\n    name: \"Europe/Dublin\"\n  },\n  {\n    offset: \"GMT\",\n    name: \"Europe/Lisbon\"\n  },\n  {\n    offset: \"GMT\",\n    name: \"Europe/London\"\n  },\n  {\n    offset: \"UTC\",\n    name: \"UTC\"\n  },\n  {\n    offset: \"GMT+01:00\",\n    name: \"Africa/Algiers\"\n  },\n  {\n    offset: \"GMT+01:00\",\n    name: \"Africa/Windhoek\"\n  },\n  {\n    offset: \"GMT+01:00\",\n    name: \"Atlantic/Azores\"\n  },\n  {\n    offset: \"GMT+01:00\",\n    name: \"Atlantic/Stanley\"\n  },\n  {\n    offset: \"GMT+01:00\",\n    name: \"Europe/Amsterdam\"\n  },\n  {\n    offset: \"GMT+01:00\",\n    name: \"Europe/Belgrade\"\n  },\n  {\n    offset: \"GMT+01:00\",\n    name: \"Europe/Brussels\"\n  },\n  {\n    offset: \"GMT+02:00\",\n    name: \"Africa/Cairo\"\n  },\n  {\n    offset: \"GMT+02:00\",\n    name: \"Africa/Blantyre\"\n  },\n  {\n    offset: \"GMT+02:00\",\n    name: \"Asia/Beirut\"\n  },\n  {\n    offset: \"GMT+02:00\",\n    name: \"Asia/Damascus\"\n  },\n  {\n    offset: \"GMT+02:00\",\n    name: \"Asia/Gaza\"\n  },\n  {\n    offset: \"GMT+02:00\",\n    name: \"Asia/Jerusalem\"\n  },\n  {\n    offset: \"GMT+03:00\",\n    name: \"Africa/Addis_Ababa\"\n  },\n  {\n    offset: \"GMT+03:00\",\n    name: \"Asia/Riyadh89\"\n  },\n  {\n    offset: \"GMT+03:00\",\n    name: \"Europe/Minsk\"\n  },\n  {\n    offset: \"GMT+03:30\",\n    name: \"Asia/Tehran\"\n  },\n  {\n    offset: \"GMT+04:00\",\n    name: \"Asia/Dubai\"\n  },\n  {\n    offset: \"GMT+04:00\",\n    name: \"Asia/Yerevan\"\n  },\n  {\n    offset: \"GMT+04:00\",\n    name: \"Europe/Moscow\"\n  },\n  {\n    offset: \"GMT+04:30\",\n    name: \"Asia/Kabul\"\n  },\n  {\n    offset: \"GMT+05:00\",\n    name: \"Asia/Tashkent\"\n  },\n  {\n    offset: \"GMT+05:30\",\n    name: \"Asia/Kolkata\"\n  },\n  {\n    offset: \"GMT+05:45\",\n    name: \"Asia/Katmandu\"\n  },\n  {\n    offset: \"GMT+06:00\",\n    name: \"Asia/Dhaka\"\n  },\n  {\n    offset: \"GMT+06:00\",\n    name: \"Asia/Yekaterinburg\"\n  },\n  {\n    offset: \"GMT+06:30\",\n    name: \"Asia/Rangoon\"\n  },\n  {\n    offset: \"GMT+07:00\",\n    name: \"Asia/Bangkok\"\n  },\n  {\n    offset: \"GMT+07:00\",\n    name: \"Asia/Novosibirsk\"\n  },\n  {\n    offset: \"GMT+08:00\",\n    name: \"Etc/GMT+8\"\n  },\n  {\n    offset: \"GMT+08:00\",\n    name: \"Asia/Hong_Kong\"\n  },\n  {\n    offset: \"GMT+08:00\",\n    name: \"Asia/Krasnoyarsk\"\n  },\n  {\n    offset: \"GMT+08:00\",\n    name: \"Australia/Perth\"\n  },\n  {\n    offset: \"GMT+08:45\",\n    name: \"Australia/Eucla\"\n  },\n  {\n    offset: \"GMT+09:00\",\n    name: \"Asia/Irkutsk\"\n  },\n  {\n    offset: \"GMT+09:00\",\n    name: \"Asia/Seoul\"\n  },\n  {\n    offset: \"GMT+09:00\",\n    name: \"Asia/Tokyo\"\n  },\n  {\n    offset: \"GMT+09:30\",\n    name: \"Australia/Adelaide\"\n  },\n  {\n    offset: \"GMT+09:30\",\n    name: \"Australia/Darwin\"\n  },\n  {\n    offset: \"GMT+09:30\",\n    name: \"Pacific/Marquesas\"\n  },\n  {\n    offset: \"GMT+10:00\",\n    name: \"Etc/GMT+10\"\n  },\n  {\n    offset: \"GMT+10:00\",\n    name: \"Australia/Brisbane\"\n  },\n  {\n    offset: \"GMT+10:00\",\n    name: \"Australia/Hobart\"\n  },\n  {\n    offset: \"GMT+10:00\",\n    name: \"Asia/Yakutsk\"\n  },\n  {\n    offset: \"GMT+10:30\",\n    name: \"Australia/Lord_Howe\"\n  },\n  {\n    offset: \"GMT+11:00\",\n    name: \"Asia/Vladivostok\"\n  },\n  {\n    offset: \"GMT+11:30\",\n    name: \"Pacific/Norfolk\"\n  },\n  {\n    offset: \"GMT+12:00\",\n    name: \"Etc/GMT+12\"\n  },\n  {\n    offset: \"GMT+12:00\",\n    name: \"Asia/Anadyr\"\n  },\n  {\n    offset: \"GMT+12:00\",\n    name: \"Asia/Magadan\"\n  },\n  {\n    offset: \"GMT+12:00\",\n    name: \"Pacific/Auckland\"\n  },\n  {\n    offset: \"GMT+12:45\",\n    name: \"Pacific/Chatham\"\n  },\n  {\n    offset: \"GMT+13:00\",\n    name: \"Pacific/Tongatapu\"\n  },\n  {\n    offset: \"GMT+14:00\",\n    name: \"Pacific/Kiritimati\"\n  }\n];\n\nconst countryList = [\n  \"India\",\n  \"Afghanistan\",\n  \"Albania\",\n  \"Algeria\",\n  \"American Samoa\",\n  \"Andorra\",\n  \"Angola\",\n  \"Anguilla\",\n  \"Antigua and Barbuda\",\n  \"Argentina\",\n  \"Armenia\",\n  \"Aruba\",\n  \"Australia\",\n  \"Austria\",\n  \"Azerbaijan\",\n  \"Bahamas (the)\",\n  \"Bahrain\",\n  \"Bangladesh\",\n  \"Barbados\",\n  \"Belarus\",\n  \"Belgium\",\n  \"Belize\",\n  \"Benin\",\n  \"Bermuda\",\n  \"Bhutan\",\n  \"Bolivia (Plurinational State of)\",\n  \"Bonaire, Sint Eustatius and Saba\",\n  \"Bosnia and Herzegovina\",\n  \"Botswana\",\n  \"Bouvet Island\",\n  \"Brazil\",\n  \"British Indian Ocean Territory (the)\",\n  \"Brunei Darussalam\",\n  \"Bulgaria\",\n  \"Burkina Faso\",\n  \"Burundi\",\n  \"Cabo Verde\",\n  \"Cambodia\",\n  \"Cameroon\",\n  \"Canada\",\n  \"Cayman Islands (the)\",\n  \"Central African Republic (the)\",\n  \"Chad\",\n  \"Chile\",\n  \"China\",\n  \"Christmas Island\",\n  \"Cocos (Keeling) Islands (the)\",\n  \"Colombia\",\n  \"Comoros (the)\",\n  \"Congo (the Democratic Republic of the)\",\n  \"Congo (the)\",\n  \"Cook Islands (the)\",\n  \"Costa Rica\",\n  \"Croatia\",\n  \"Cuba\",\n  \"Curaçao\",\n  \"Cyprus\",\n  \"Czechia\",\n  \"Côte d'Ivoire\",\n  \"Denmark\",\n  \"Djibouti\",\n  \"Dominica\",\n  \"Dominican Republic (the)\",\n  \"Ecuador\",\n  \"Egypt\",\n  \"El Salvador\",\n  \"Equatorial Guinea\",\n  \"Eritrea\",\n  \"Estonia\",\n  \"Eswatini\",\n  \"Ethiopia\",\n  \"Falkland Islands (the) [Malvinas]\",\n  \"Faroe Islands (the)\",\n  \"Fiji\",\n  \"Finland\",\n  \"France\",\n  \"French Guiana\",\n  \"French Polynesia\",\n  \"French Southern Territories (the)\",\n  \"Gabon\",\n  \"Gambia (the)\",\n  \"Georgia\",\n  \"Germany\",\n  \"Ghana\",\n  \"Gibraltar\",\n  \"Greece\",\n  \"Greenland\",\n  \"Grenada\",\n  \"Guadeloupe\",\n  \"Guam\",\n  \"Guatemala\",\n  \"Guernsey\",\n  \"Guinea\",\n  \"Guinea-Bissau\",\n  \"Guyana\",\n  \"Haiti\",\n  \"Heard Island and McDonald Islands\",\n  \"Holy See (the)\",\n  \"Honduras\",\n  \"Hong Kong\",\n  \"Hungary\",\n  \"Iceland\",\n  \"Indonesia\",\n  \"Iran (Islamic Republic of)\",\n  \"Iraq\",\n  \"Ireland\",\n  \"Isle of Man\",\n  \"Israel\",\n  \"Italy\",\n  \"Jamaica\",\n  \"Japan\",\n  \"Jersey\",\n  \"Jordan\",\n  \"Kazakhstan\",\n  \"Kenya\",\n  \"Kiribati\",\n  \"Korea (the Democratic People's Republic of)\",\n  \"Korea (the Republic of)\",\n  \"Kuwait\",\n  \"Kyrgyzstan\",\n  \"Lao People's Democratic Republic (the)\",\n  \"Latvia\",\n  \"Lebanon\",\n  \"Lesotho\",\n  \"Liberia\",\n  \"Libya\",\n  \"Liechtenstein\",\n  \"Lithuania\",\n  \"Luxembourg\",\n  \"Macao\",\n  \"Madagascar\",\n  \"Malawi\",\n  \"Malaysia\",\n  \"Maldives\",\n  \"Mali\",\n  \"Malta\",\n  \"Marshall Islands (the)\",\n  \"Martinique\",\n  \"Mauritania\",\n  \"Mauritius\",\n  \"Mayotte\",\n  \"Mexico\",\n  \"Micronesia (Federated States of)\",\n  \"Moldova (the Republic of)\",\n  \"Monaco\",\n  \"Mongolia\",\n  \"Montenegro\",\n  \"Montserrat\",\n  \"Morocco\",\n  \"Mozambique\",\n  \"Myanmar\",\n  \"Namibia\",\n  \"Nauru\",\n  \"Nepal\",\n  \"Netherlands (the)\",\n  \"New Caledonia\",\n  \"New Zealand\",\n  \"Nicaragua\",\n  \"Niger (the)\",\n  \"Nigeria\",\n  \"Niue\",\n  \"Norfolk Island\",\n  \"Northern Mariana Islands (the)\",\n  \"Norway\",\n  \"Oman\",\n  \"Pakistan\",\n  \"Palau\",\n  \"Palestine, State of\",\n  \"Panama\",\n  \"Papua New Guinea\",\n  \"Paraguay\",\n  \"Peru\",\n  \"Philippines (the)\",\n  \"Pitcairn\",\n  \"Poland\",\n  \"Portugal\",\n  \"Puerto Rico\",\n  \"Qatar\",\n  \"Republic of North Macedonia\",\n  \"Romania\",\n  \"Russian Federation (the)\",\n  \"Rwanda\",\n  \"Réunion\",\n  \"Saint Barthélemy\",\n  \"Saint Helena, Ascension and Tristan da Cunha\",\n  \"Saint Kitts and Nevis\",\n  \"Saint Lucia\",\n  \"Saint Martin (French part)\",\n  \"Saint Pierre and Miquelon\",\n  \"Saint Vincent and the Grenadines\",\n  \"Samoa\",\n  \"San Marino\",\n  \"Sao Tome and Principe\",\n  \"Saudi Arabia\",\n  \"Senegal\",\n  \"Serbia\",\n  \"Seychelles\",\n  \"Sierra Leone\",\n  \"Singapore\",\n  \"Sint Maarten (Dutch part)\",\n  \"Slovakia\",\n  \"Slovenia\",\n  \"Solomon Islands\",\n  \"Somalia\",\n  \"South Africa\",\n  \"South Georgia and the South Sandwich Islands\",\n  \"South Sudan\",\n  \"Spain\",\n  \"Sri Lanka\",\n  \"Sudan (the)\",\n  \"Suriname\",\n  \"Svalbard and Jan Mayen\",\n  \"Sweden\",\n  \"Switzerland\",\n  \"Syrian Arab Republic\",\n  \"Taiwan (Province of China)\",\n  \"Tajikistan\",\n  \"Tanzania, United Republic of\",\n  \"Thailand\",\n  \"Timor-Leste\",\n  \"Togo\",\n  \"Tokelau\",\n  \"Tonga\",\n  \"Trinidad and Tobago\",\n  \"Tunisia\",\n  \"Turkey\",\n  \"Turkmenistan\",\n  \"Turks and Caicos Islands (the)\",\n  \"Tuvalu\",\n  \"Uganda\",\n  \"Ukraine\",\n  \"United Arab Emirates (the)\",\n  \"United Kingdom of Great Britain and Northern Ireland (the)\",\n  \"United States Minor Outlying Islands (the)\",\n  \"United States of America (the)\",\n  \"Uruguay\",\n  \"Uzbekistan\",\n  \"Vanuatu\",\n  \"Venezuela (Bolivarian Republic of)\",\n  \"Viet Nam\",\n  \"Virgin Islands (British)\",\n  \"Virgin Islands (U.S.)\",\n  \"Wallis and Futuna\",\n  \"Western Sahara\",\n  \"Yemen\",\n  \"Zambia\",\n  \"Zimbabwe\",\n  \"Åland Islands\"\n];\n\nclass SMSForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: {\n        phoneNumber: \"\",\n        name: \"\",\n        location: \"\",\n        timeZone: \"\"\n      },\n      submitted: false,\n      error: false\n    };\n\n    this.onHandleChange = this.onHandleChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onHandleChange(event) {\n    const name = event.target.getAttribute(\"name\");\n    this.setState({\n      message: {\n        ...this.state.message,\n        [name]: event.target.value\n      }\n    });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    this.setState({ submitting: true });\n    console.log(this.state.message);\n    fetch(\"http://localhost:8082/api/users/add\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(this.state.message)\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          this.setState({\n            error: false,\n            submitting: false,\n            message: {\n              phoneNumber: \"\",\n              name: \"\",\n              location: \"\",\n              timeZone: \"\"\n            }\n          });\n        } else {\n          this.setState({\n            error: true,\n            submitting: false\n          });\n        }\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"formElements\">\n        <form\n          onSubmit={this.onSubmit}\n          className={this.state.error ? \"error sms-form\" : \"sms-form\"}\n        >\n          <label htmlFor=\"name\">Name: </label>\n          <input\n            type=\"name\"\n            name=\"name\"\n            id=\"name\"\n            onChange={this.onHandleChange}\n            value={this.state.message.name}\n            required\n          />\n          <label htmlFor=\"phoneNumber\">Number: </label>\n          <p>please remember to append your country code e.g. +1</p>\n          <input\n            type=\"tel\"\n            name=\"phoneNumber\"\n            id=\"phoneNumber\"\n            onChange={this.onHandleChange}\n            value={this.state.message.phoneNumber}\n            required\n          ></input>\n          <label htmlFor=\"location\">Country: </label>\n          <select\n            id=\"location\"\n            name=\"location\"\n            onChange={this.onHandleChange}\n            required\n          >\n            <option value=\"\" selected disabled hidden>\n              Select your Country\n            </option>\n            {countryList.map(country => {\n              return <option value={country}>{country}</option>;\n            })}\n          </select>\n          <label htmlFor=\"timeZone\">Timezone: </label>\n          <select\n            id=\"timeZone\"\n            name=\"timeZone\"\n            onChange={this.onHandleChange}\n            required\n          >\n            <option value=\"\" selected disabled hidden>\n              Select your Timezone\n            </option>\n            {allTimeZones.map(timezone => {\n              return (\n                <option value={timezone.name}>\n                  {timezone.offset} - {timezone.name}\n                </option>\n              );\n            })}\n          </select>\n          <div style={{ textAlign: \"center\" }}>\n            <button type=\"submit\" className=\"submit-btn\">\n              subscribe\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SMSForm;\n"]},"metadata":{},"sourceType":"module"}